// <auto-generated />
using System;
using Forms.Models.DbAppContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Forms.Migrations
{
    [DbContext(typeof(DbAppContext))]
    partial class DbAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Forms.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AnswerBoolean")
                        .HasColumnType("bit");

                    b.Property<int>("AnswerDate")
                        .HasColumnType("int");

                    b.Property<int>("AnswerInt")
                        .HasColumnType("int");

                    b.Property<string>("AnswerTextEnum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionOptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionOptionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Forms.Models.EnumChoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EnumChoiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnumGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnumGroupId");

                    b.ToTable("EnumChoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnumChoiceName = "Male",
                            EnumGroupId = 1
                        },
                        new
                        {
                            Id = 2,
                            EnumChoiceName = "Female",
                            EnumGroupId = 1
                        },
                        new
                        {
                            Id = 3,
                            EnumChoiceName = "Single",
                            EnumGroupId = 2
                        },
                        new
                        {
                            Id = 4,
                            EnumChoiceName = "Married",
                            EnumGroupId = 2
                        });
                });

            modelBuilder.Entity("Forms.Models.EnumGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EnumGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnumGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnumGroupName = "Sex"
                        },
                        new
                        {
                            Id = 2,
                            EnumGroupName = "MaritalStatus"
                        });
                });

            modelBuilder.Entity("Forms.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("EnumGroupId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("QuestionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnumGroupId");

                    b.HasIndex("QuestionTypeId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Order = 1,
                            QuestionName = "Введите имя",
                            QuestionTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Order = 2,
                            QuestionName = "Введите возраст",
                            QuestionTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            EnumGroupId = 1,
                            Order = 3,
                            QuestionName = "Введите пол",
                            QuestionTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Order = 4,
                            QuestionName = "Введите дату",
                            QuestionTypeId = 3
                        },
                        new
                        {
                            Id = 5,
                            EnumGroupId = 2,
                            Order = 5,
                            QuestionName = "Введите семейное положение",
                            QuestionTypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            Order = 6,
                            QuestionName = "Любите ли вы программировать",
                            QuestionTypeId = 4
                        });
                });

            modelBuilder.Entity("Forms.Models.QuestionOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EnumChoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnumChoiceId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnumChoiceId = 1,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 2,
                            EnumChoiceId = 2,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 3,
                            EnumChoiceId = 3,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 4,
                            EnumChoiceId = 4,
                            QuestionId = 5
                        });
                });

            modelBuilder.Entity("Forms.Models.QuestionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("QuestionTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuestionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionTypeName = "text"
                        },
                        new
                        {
                            Id = 2,
                            QuestionTypeName = "int"
                        },
                        new
                        {
                            Id = 3,
                            QuestionTypeName = "date"
                        },
                        new
                        {
                            Id = 4,
                            QuestionTypeName = "bool"
                        });
                });

            modelBuilder.Entity("Forms.Models.Answer", b =>
                {
                    b.HasOne("Forms.Models.QuestionOption", "QuestionOption")
                        .WithMany()
                        .HasForeignKey("QuestionOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionOption");
                });

            modelBuilder.Entity("Forms.Models.EnumChoice", b =>
                {
                    b.HasOne("Forms.Models.EnumGroup", "EnumGroup")
                        .WithMany()
                        .HasForeignKey("EnumGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnumGroup");
                });

            modelBuilder.Entity("Forms.Models.Question", b =>
                {
                    b.HasOne("Forms.Models.EnumGroup", "EnumGroup")
                        .WithMany()
                        .HasForeignKey("EnumGroupId");

                    b.HasOne("Forms.Models.QuestionType", "QuestionType")
                        .WithMany()
                        .HasForeignKey("QuestionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnumGroup");

                    b.Navigation("QuestionType");
                });

            modelBuilder.Entity("Forms.Models.QuestionOption", b =>
                {
                    b.HasOne("Forms.Models.EnumChoice", "EnumChoice")
                        .WithMany()
                        .HasForeignKey("EnumChoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forms.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.Navigation("EnumChoice");

                    b.Navigation("Question");
                });
#pragma warning restore 612, 618
        }
    }
}
